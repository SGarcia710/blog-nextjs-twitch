import Head from 'next/head';

import useSWR from 'swr';
import ReactMarkdown from 'react-markdown';
import { fetcher } from '@blog/commons/utils';
import styled from 'styled-components';
import SIZES from '@blog/commons/constants/sizes';
import COLORS from '@blog/commons/constants/colors';
import moment from 'moment';
import remarkGfm from 'remark-gfm';
import { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';
import { Prism as dracula } from 'react-syntax-highlighter';
import axios from 'axios';

const Container = styled.div`
  display: flex;
  flex-direction: column;
  align-items: center;
`;

const BodyContainer = styled(ReactMarkdown)`
  width: ${SIZES.containerWidth}px;
`;

const HeroContainer = styled.section`
  background-color: ${COLORS.lightBackground};
  width: 100%;
`;

const SubHeroContainer = styled.div`
  width: ${SIZES.containerWidth}px;
  display: flex;
  justify-content: space-between;
  h1 {
    font-size: 2.3rem;
    line-height: 1.1;
    font-family: 'DM Mono';
    margin-bottom: 16px;
    color: white;
    max-width: 90%;
  }
  img {
  }
  p {
    font-family: 'DM Mono';
    strong {
      transition: 0.3s;
      cursor: pointer;
      &:hover {
        color: white;
      }
    }
  }
`;

const Blog = (props) => {
  return (
    <>
      <Head>
        <title>{props.post.title}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Container>
        <HeroContainer className="flex py-12 px-0 justify-center mb-10">
          <SubHeroContainer>
            <div>
              <h1 className="font-bold">{props.post.title}</h1>
              <p>
                By <strong>Jupiter Garcia</strong> on{' '}
                {moment(props.post.creationDate).format('MMMM Do YYYY')}
              </p>
            </div>
            <img alt="Featured post" src={props.post.featuredImage} />
          </SubHeroContainer>
        </HeroContainer>
        <BodyContainer
          components={{
            code({ node, inline, className, children, ...props }) {
              const match = /language-(\w+)/.exec(className || '');
              return !inline && match ? (
                <SyntaxHighlighter
                  children={String(children).replace(/\n$/, '')}
                  style={dracula}
                  language={match[1]}
                  PreTag="div"
                  {...props}
                />
              ) : (
                <code className={className} {...props}>
                  {children}
                </code>
              );
            },
          }}
          remarkPlugins={[remarkGfm]}
        >
          {props.post.description}
        </BodyContainer>
      </Container>
    </>
  );
};

export const getStaticPaths = async () => {
  const { items } = (
    await axios(
      'https://cdn.contentful.com/spaces/yh4w8kx19nfo/environments/master/entries?access_token=zfucnL-f_0rkRXzSSisgxtb7VMPkyXWTA_Qv5G5Rb-w'
    )
  ).data;

  const paths = items.map((post) => {
    return {
      params: { slug: post.sys.id },
    };
  });

  return { paths, fallback: false };
};

export const getStaticProps = async ({ params }) => {
  const response = (
    await axios(
      `https://cdn.contentful.com/spaces/yh4w8kx19nfo/environments/master/entries/${params.slug}?access_token=zfucnL-f_0rkRXzSSisgxtb7VMPkyXWTA_Qv5G5Rb-w`
    )
  ).data;

  return {
    props: {
      post: response.fields,
    },
  };
};

export default Blog;
